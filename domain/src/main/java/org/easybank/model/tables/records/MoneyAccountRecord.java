/*
 * This file is generated by jOOQ.
 */
package org.easybank.model.tables.records;


import java.math.BigDecimal;

import org.easybank.aggregate.UserId;
import org.easybank.model.tables.MoneyAccount;
import org.easybank.type.Currency;
import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MoneyAccountRecord extends TableRecordImpl<MoneyAccountRecord> implements Record3<UserId, Currency, BigDecimal> {

    private static final long serialVersionUID = -260854420;

    /**
     * Setter for <code>MONEY_ACCOUNT.USER_ID</code>.
     */
    public MoneyAccountRecord setUserId(UserId value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>MONEY_ACCOUNT.USER_ID</code>.
     */
    public UserId getUserId() {
        return (UserId) get(0);
    }

    /**
     * Setter for <code>MONEY_ACCOUNT.CURRENCY</code>.
     */
    public MoneyAccountRecord setCurrency(Currency value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>MONEY_ACCOUNT.CURRENCY</code>.
     */
    public Currency getCurrency() {
        return (Currency) get(1);
    }

    /**
     * Setter for <code>MONEY_ACCOUNT.VALUE</code>.
     */
    public MoneyAccountRecord setValue(BigDecimal value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>MONEY_ACCOUNT.VALUE</code>.
     */
    public BigDecimal getValue() {
        return (BigDecimal) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<UserId, Currency, BigDecimal> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<UserId, Currency, BigDecimal> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<UserId> field1() {
        return MoneyAccount.MONEY_ACCOUNT.USER_ID;
    }

    @Override
    public Field<Currency> field2() {
        return MoneyAccount.MONEY_ACCOUNT.CURRENCY;
    }

    @Override
    public Field<BigDecimal> field3() {
        return MoneyAccount.MONEY_ACCOUNT.VALUE;
    }

    @Override
    public UserId component1() {
        return getUserId();
    }

    @Override
    public Currency component2() {
        return getCurrency();
    }

    @Override
    public BigDecimal component3() {
        return getValue();
    }

    @Override
    public UserId value1() {
        return getUserId();
    }

    @Override
    public Currency value2() {
        return getCurrency();
    }

    @Override
    public BigDecimal value3() {
        return getValue();
    }

    @Override
    public MoneyAccountRecord value1(UserId value) {
        setUserId(value);
        return this;
    }

    @Override
    public MoneyAccountRecord value2(Currency value) {
        setCurrency(value);
        return this;
    }

    @Override
    public MoneyAccountRecord value3(BigDecimal value) {
        setValue(value);
        return this;
    }

    @Override
    public MoneyAccountRecord values(UserId value1, Currency value2, BigDecimal value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MoneyAccountRecord
     */
    public MoneyAccountRecord() {
        super(MoneyAccount.MONEY_ACCOUNT);
    }

    /**
     * Create a detached, initialised MoneyAccountRecord
     */
    public MoneyAccountRecord(UserId userId, Currency currency, BigDecimal value) {
        super(MoneyAccount.MONEY_ACCOUNT);

        set(0, userId);
        set(1, currency);
        set(2, value);
    }
}
