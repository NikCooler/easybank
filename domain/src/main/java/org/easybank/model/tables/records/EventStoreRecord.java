/*
 * This file is generated by jOOQ.
 */
package org.easybank.model.tables.records;


import org.easybank.model.tables.EventStore;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventStoreRecord extends UpdatableRecordImpl<EventStoreRecord> implements Record6<Long, String, Integer, String, String, Long> {

    private static final long serialVersionUID = 963092512;

    /**
     * Setter for <code>EVENT_STORE.EVENT_ID</code>.
     */
    public EventStoreRecord setEventId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>EVENT_STORE.EVENT_ID</code>.
     */
    public Long getEventId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>EVENT_STORE.AGGREGATE_ID</code>.
     */
    public EventStoreRecord setAggregateId(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>EVENT_STORE.AGGREGATE_ID</code>.
     */
    public String getAggregateId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>EVENT_STORE.AGGREGATE_VERSION</code>.
     */
    public EventStoreRecord setAggregateVersion(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>EVENT_STORE.AGGREGATE_VERSION</code>.
     */
    public Integer getAggregateVersion() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>EVENT_STORE.EVENT_TYPE</code>.
     */
    public EventStoreRecord setEventType(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>EVENT_STORE.EVENT_TYPE</code>.
     */
    public String getEventType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>EVENT_STORE.EVENT_DATA</code>.
     */
    public EventStoreRecord setEventData(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>EVENT_STORE.EVENT_DATA</code>.
     */
    public String getEventData() {
        return (String) get(4);
    }

    /**
     * Setter for <code>EVENT_STORE.EVENT_TIMESTAMP</code>.
     */
    public EventStoreRecord setEventTimestamp(Long value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>EVENT_STORE.EVENT_TIMESTAMP</code>.
     */
    public Long getEventTimestamp() {
        return (Long) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, String, Integer, String, String, Long> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, String, Integer, String, String, Long> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return EventStore.EVENT_STORE.EVENT_ID;
    }

    @Override
    public Field<String> field2() {
        return EventStore.EVENT_STORE.AGGREGATE_ID;
    }

    @Override
    public Field<Integer> field3() {
        return EventStore.EVENT_STORE.AGGREGATE_VERSION;
    }

    @Override
    public Field<String> field4() {
        return EventStore.EVENT_STORE.EVENT_TYPE;
    }

    @Override
    public Field<String> field5() {
        return EventStore.EVENT_STORE.EVENT_DATA;
    }

    @Override
    public Field<Long> field6() {
        return EventStore.EVENT_STORE.EVENT_TIMESTAMP;
    }

    @Override
    public Long component1() {
        return getEventId();
    }

    @Override
    public String component2() {
        return getAggregateId();
    }

    @Override
    public Integer component3() {
        return getAggregateVersion();
    }

    @Override
    public String component4() {
        return getEventType();
    }

    @Override
    public String component5() {
        return getEventData();
    }

    @Override
    public Long component6() {
        return getEventTimestamp();
    }

    @Override
    public Long value1() {
        return getEventId();
    }

    @Override
    public String value2() {
        return getAggregateId();
    }

    @Override
    public Integer value3() {
        return getAggregateVersion();
    }

    @Override
    public String value4() {
        return getEventType();
    }

    @Override
    public String value5() {
        return getEventData();
    }

    @Override
    public Long value6() {
        return getEventTimestamp();
    }

    @Override
    public EventStoreRecord value1(Long value) {
        setEventId(value);
        return this;
    }

    @Override
    public EventStoreRecord value2(String value) {
        setAggregateId(value);
        return this;
    }

    @Override
    public EventStoreRecord value3(Integer value) {
        setAggregateVersion(value);
        return this;
    }

    @Override
    public EventStoreRecord value4(String value) {
        setEventType(value);
        return this;
    }

    @Override
    public EventStoreRecord value5(String value) {
        setEventData(value);
        return this;
    }

    @Override
    public EventStoreRecord value6(Long value) {
        setEventTimestamp(value);
        return this;
    }

    @Override
    public EventStoreRecord values(Long value1, String value2, Integer value3, String value4, String value5, Long value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EventStoreRecord
     */
    public EventStoreRecord() {
        super(EventStore.EVENT_STORE);
    }

    /**
     * Create a detached, initialised EventStoreRecord
     */
    public EventStoreRecord(Long eventId, String aggregateId, Integer aggregateVersion, String eventType, String eventData, Long eventTimestamp) {
        super(EventStore.EVENT_STORE);

        set(0, eventId);
        set(1, aggregateId);
        set(2, aggregateVersion);
        set(3, eventType);
        set(4, eventData);
        set(5, eventTimestamp);
    }
}
